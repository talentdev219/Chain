/*
 * This file is part of the Nodle Chain distributed at https://github.com/NodleCode/chain
 * Copyright (C) 2020-2022  Nodle International
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//! Autogenerated weights for pallet_nodle_uniques
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `chain-bench-2a6c49ba`, CPU: `AMD EPYC 7B13`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/nodle-parachain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_nodle_uniques
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --template=./.maintain/internal_pallet_weights.hbs
// --output=temp_weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{constants::RocksDbWeight, Weight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_nodle_uniques.
pub trait WeightInfo {
	fn destroy(n: u32, m: u32, a: u32, ) -> Weight;
	fn mint_with_extra_deposit() -> Weight;
	fn burn() -> Weight;
	fn create_with_extra_deposit_limit() -> Weight;
	fn transfer_ownership() -> Weight;
	fn update_extra_deposit_limit() -> Weight;
}

/// Weight functions for `pallet_nodle_uniques`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: Uniques ItemExtraDeposits (r:1001 w:1000)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Asset (r:1001 w:1000)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: SubstrateUniques InstanceMetadataOf (r:1000 w:1000)
	// Proof: SubstrateUniques InstanceMetadataOf (max_values: None, max_size: Some(187), added: 2662, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Attribute (r:1000 w:1000)
	// Proof: SubstrateUniques Attribute (max_values: None, max_size: Some(364), added: 2839, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassAccount (r:0 w:1)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassMetadataOf (r:0 w:1)
	// Proof: SubstrateUniques ClassMetadataOf (max_values: None, max_size: Some(167), added: 2642, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1000)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: SubstrateUniques CollectionMaxSupply (r:0 w:1)
	// Proof: SubstrateUniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 1000]`.
	/// The range of component `m` is `[0, 1000]`.
	/// The range of component `a` is `[0, 1000]`.
	fn destroy(n: u32, m: u32, a: u32, ) -> Weight {
		// Minimum execution time: 3_373_259 nanoseconds.
		Weight::from_parts(3_391_890_000_u64, 0)
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(38_453_923_u64, 0).saturating_mul(n as u64))
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(167_125_u64, 0).saturating_mul(m as u64))
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(340_047_u64, 0).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a as u64)))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a as u64)))
	}
	// Storage: SubstrateUniques Asset (r:1 w:1)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: SubstrateUniques CollectionMaxSupply (r:1 w:0)
	// Proof: SubstrateUniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: Uniques ItemExtraDeposits (r:0 w:1)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn mint_with_extra_deposit() -> Weight {
		// Minimum execution time: 97_860 nanoseconds.
		Weight::from_parts(100_160_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Asset (r:1 w:1)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques ItemExtraDeposits (r:1 w:1)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ItemPriceOf (r:0 w:1)
	// Proof: SubstrateUniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Minimum execution time: 96_870 nanoseconds.
		Weight::from_parts(99_550_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: SubstrateUniques ClassAccount (r:0 w:1)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	// Storage: Uniques CollectionExtraDepositDetails (r:0 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn create_with_extra_deposit_limit() -> Weight {
		// Minimum execution time: 57_991 nanoseconds.
		Weight::from_parts(59_300_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: SubstrateUniques OwnershipAcceptance (r:1 w:1)
	// Proof: SubstrateUniques OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:0)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassAccount (r:0 w:2)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn transfer_ownership() -> Weight {
		// Minimum execution time: 89_700 nanoseconds.
		Weight::from_parts(91_700_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:0)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn update_extra_deposit_limit() -> Weight {
		// Minimum execution time: 20_000 nanoseconds.
		Weight::from_parts(20_000_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
}

impl WeightInfo for () {
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: Uniques ItemExtraDeposits (r:1001 w:1000)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Asset (r:1001 w:1000)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: SubstrateUniques InstanceMetadataOf (r:1000 w:1000)
	// Proof: SubstrateUniques InstanceMetadataOf (max_values: None, max_size: Some(187), added: 2662, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Attribute (r:1000 w:1000)
	// Proof: SubstrateUniques Attribute (max_values: None, max_size: Some(364), added: 2839, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassAccount (r:0 w:1)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassMetadataOf (r:0 w:1)
	// Proof: SubstrateUniques ClassMetadataOf (max_values: None, max_size: Some(167), added: 2642, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1000)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: SubstrateUniques CollectionMaxSupply (r:0 w:1)
	// Proof: SubstrateUniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 1000]`.
	/// The range of component `m` is `[0, 1000]`.
	/// The range of component `a` is `[0, 1000]`.
	fn destroy(n: u32, m: u32, a: u32, ) -> Weight {
		// Minimum execution time: 3_373_259 nanoseconds.
		Weight::from_parts(3_391_890_000_u64, 0)
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(38_453_923_u64, 0).saturating_mul(n as u64))
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(167_125_u64, 0).saturating_mul(m as u64))
			// Standard Error: 33_513
			.saturating_add(Weight::from_parts(340_047_u64, 0).saturating_mul(a as u64))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(m as u64)))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(a as u64)))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(m as u64)))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(a as u64)))
	}
	// Storage: SubstrateUniques Asset (r:1 w:1)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: SubstrateUniques CollectionMaxSupply (r:1 w:0)
	// Proof: SubstrateUniques CollectionMaxSupply (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: Uniques ItemExtraDeposits (r:0 w:1)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn mint_with_extra_deposit() -> Weight {
		// Minimum execution time: 97_860 nanoseconds.
		Weight::from_parts(100_160_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Asset (r:1 w:1)
	// Proof: SubstrateUniques Asset (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques ItemExtraDeposits (r:1 w:1)
	// Proof: Uniques ItemExtraDeposits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Account (r:0 w:1)
	// Proof: SubstrateUniques Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ItemPriceOf (r:0 w:1)
	// Proof: SubstrateUniques ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Minimum execution time: 96_870 nanoseconds.
		Weight::from_parts(99_550_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: SubstrateUniques ClassAccount (r:0 w:1)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	// Storage: Uniques CollectionExtraDepositDetails (r:0 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn create_with_extra_deposit_limit() -> Weight {
		// Minimum execution time: 57_991 nanoseconds.
		Weight::from_parts(59_300_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	// Storage: SubstrateUniques OwnershipAcceptance (r:1 w:1)
	// Proof: SubstrateUniques OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques Class (r:1 w:1)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:0)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: SubstrateUniques ClassAccount (r:0 w:2)
	// Proof: SubstrateUniques ClassAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn transfer_ownership() -> Weight {
		// Minimum execution time: 89_700 nanoseconds.
		Weight::from_parts(91_700_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	// Storage: SubstrateUniques Class (r:1 w:0)
	// Proof: SubstrateUniques Class (max_values: None, max_size: Some(178), added: 2653, mode: MaxEncodedLen)
	// Storage: Uniques CollectionExtraDepositDetails (r:1 w:1)
	// Proof: Uniques CollectionExtraDepositDetails (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn update_extra_deposit_limit() -> Weight {
		// Minimum execution time: 20_000 nanoseconds.
		Weight::from_parts(20_000_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
}
