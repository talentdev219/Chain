/*
 * This file is part of the Nodle Chain distributed at https://github.com/NodleCode/chain
 * Copyright (C) 2020-2022  Nodle International
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-12, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `chain-bench-3403be85`, CPU: `AMD EPYC 7B13`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/nodle-parachain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --template=./.maintain/external_pallet_weights.hbs
// --output=runtimes/eden/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use core::marker::PhantomData;

/// Weight functions for `pallet_contracts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
	// Storage: Contracts DeletionQueueCounter (r:1 w:0)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	fn on_process_deletion_queue_batch() -> Weight {
		// Minimum execution time: 3_870 nanoseconds.
		Weight::from_parts(4_090_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Minimum execution time: 21_550 nanoseconds.
		Weight::from_parts(9_577_999_u64, 0)
			// Standard Error: 1_984
			.saturating_add(Weight::from_parts(1_172_752_u64, 0).saturating_mul(k as u64))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(k as u64)))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k as u64)))
	}
	// Storage: Contracts PristineCode (r:1 w:0)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn reinstrument(c: u32, ) -> Weight {
		// Minimum execution time: 58_280 nanoseconds.
		Weight::from_parts(69_849_259_u64, 0)
			// Standard Error: 130
			.saturating_add(Weight::from_parts(69_309_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Minimum execution time: 501_310 nanoseconds.
		Weight::from_parts(535_789_342_u64, 0)
			// Standard Error: 27
			.saturating_add(Weight::from_parts(43_337_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 4_785_220 nanoseconds.
		Weight::from_parts(798_516_031_u64, 0)
			// Standard Error: 245
			.saturating_add(Weight::from_parts(131_482_u64, 0).saturating_mul(c as u64))
			// Standard Error: 14
			.saturating_add(Weight::from_parts(2_005_u64, 0).saturating_mul(i as u64))
			// Standard Error: 14
			.saturating_add(Weight::from_parts(1_919_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 2_519_370 nanoseconds.
		Weight::from_parts(485_747_374_u64, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(2_049_u64, 0).saturating_mul(i as u64))
			// Standard Error: 11
			.saturating_add(Weight::from_parts(1_930_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn call() -> Weight {
		// Minimum execution time: 332_470 nanoseconds.
		Weight::from_parts(342_180_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn upload_code(c: u32, ) -> Weight {
		// Minimum execution time: 496_110 nanoseconds.
		Weight::from_parts(373_152_845_u64, 0)
			// Standard Error: 1_117
			.saturating_add(Weight::from_parts(137_432_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	fn remove_code() -> Weight {
		// Minimum execution time: 57_080 nanoseconds.
		Weight::from_parts(58_780_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:2 w:2)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn set_code() -> Weight {
		// Minimum execution time: 52_230 nanoseconds.
		Weight::from_parts(53_480_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Minimum execution time: 457_850 nanoseconds.
		Weight::from_parts(470_109_925_u64, 0)
			// Standard Error: 641
			.saturating_add(Weight::from_parts(568_279_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Minimum execution time: 457_370 nanoseconds.
		Weight::from_parts(269_367_585_u64, 0)
			// Standard Error: 7_032
			.saturating_add(Weight::from_parts(4_768_381_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 460_430 nanoseconds.
		Weight::from_parts(274_923_773_u64, 0)
			// Standard Error: 6_575
			.saturating_add(Weight::from_parts(6_229_733_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 456_771 nanoseconds.
		Weight::from_parts(474_821_082_u64, 0)
			// Standard Error: 992
			.saturating_add(Weight::from_parts(754_554_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Minimum execution time: 447_150 nanoseconds.
		Weight::from_parts(461_639_692_u64, 0)
			// Standard Error: 366
			.saturating_add(Weight::from_parts(185_167_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Minimum execution time: 458_589 nanoseconds.
		Weight::from_parts(469_055_082_u64, 0)
			// Standard Error: 768
			.saturating_add(Weight::from_parts(561_870_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Minimum execution time: 454_720 nanoseconds.
		Weight::from_parts(470_603_712_u64, 0)
			// Standard Error: 681
			.saturating_add(Weight::from_parts(983_259_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:2 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Minimum execution time: 455_710 nanoseconds.
		Weight::from_parts(479_801_678_u64, 0)
			// Standard Error: 928
			.saturating_add(Weight::from_parts(2_750_022_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Minimum execution time: 456_160 nanoseconds.
		Weight::from_parts(471_451_146_u64, 0)
			// Standard Error: 608
			.saturating_add(Weight::from_parts(565_374_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Minimum execution time: 457_150 nanoseconds.
		Weight::from_parts(470_705_824_u64, 0)
			// Standard Error: 616
			.saturating_add(Weight::from_parts(560_149_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Minimum execution time: 456_169 nanoseconds.
		Weight::from_parts(471_686_829_u64, 0)
			// Standard Error: 630
			.saturating_add(Weight::from_parts(559_262_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Minimum execution time: 458_000 nanoseconds.
		Weight::from_parts(471_101_973_u64, 0)
			// Standard Error: 527
			.saturating_add(Weight::from_parts(554_894_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
	// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Minimum execution time: 460_290 nanoseconds.
		Weight::from_parts(482_113_081_u64, 0)
			// Standard Error: 913
			.saturating_add(Weight::from_parts(2_111_931_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas(r: u32, ) -> Weight {
		// Minimum execution time: 292_320 nanoseconds.
		Weight::from_parts(304_871_294_u64, 0)
			// Standard Error: 455
			.saturating_add(Weight::from_parts(151_033_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Minimum execution time: 454_670 nanoseconds.
		Weight::from_parts(473_516_015_u64, 0)
			// Standard Error: 789
			.saturating_add(Weight::from_parts(409_450_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 457_260 nanoseconds.
		Weight::from_parts(469_947_864_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(651_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Minimum execution time: 447_950 nanoseconds.
		Weight::from_parts(457_531_232_u64, 0)
			// Standard Error: 445_231
			.saturating_add(Weight::from_parts(4_047_567_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 454_440 nanoseconds.
		Weight::from_parts(462_029_686_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(290_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueueCounter (r:1 w:1)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueue (r:0 w:1)
	// Proof: Contracts DeletionQueue (max_values: None, max_size: Some(142), added: 2617, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Minimum execution time: 450_211 nanoseconds.
		Weight::from_parts(460_933_595_u64, 0)
			// Standard Error: 551_771
			.saturating_add(Weight::from_parts(204_641_104_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Minimum execution time: 456_730 nanoseconds.
		Weight::from_parts(484_689_351_u64, 0)
			// Standard Error: 1_338
			.saturating_add(Weight::from_parts(3_241_192_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Minimum execution time: 451_860 nanoseconds.
		Weight::from_parts(476_004_368_u64, 0)
			// Standard Error: 2_481
			.saturating_add(Weight::from_parts(6_491_247_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:6 w:6)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Minimum execution time: 480_240 nanoseconds.
		Weight::from_parts(477_367_870_u64, 0)
			// Standard Error: 74_240
			.saturating_add(Weight::from_parts(3_385_149_u64, 0).saturating_mul(t as u64))
			// Standard Error: 20
			.saturating_add(Weight::from_parts(991_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Minimum execution time: 298_700 nanoseconds.
		Weight::from_parts(310_594_929_u64, 0)
			// Standard Error: 448
			.saturating_add(Weight::from_parts(266_945_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: MaxEncodedLen)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: MaxEncodedLen)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Minimum execution time: 602_780 nanoseconds.
		Weight::from_parts(612_621_109_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(863_u64, 0).saturating_mul(i as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Minimum execution time: 459_520 nanoseconds.
		Weight::from_parts(364_640_369_u64, 0)
			// Standard Error: 9_984
			.saturating_add(Weight::from_parts(7_581_753_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Minimum execution time: 478_290 nanoseconds.
		Weight::from_parts(543_115_066_u64, 0)
			// Standard Error: 86
			.saturating_add(Weight::from_parts(992_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Minimum execution time: 479_090 nanoseconds.
		Weight::from_parts(489_732_636_u64, 0)
			// Standard Error: 25
			.saturating_add(Weight::from_parts(207_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Minimum execution time: 455_880 nanoseconds.
		Weight::from_parts(355_140_490_u64, 0)
			// Standard Error: 11_342
			.saturating_add(Weight::from_parts(7_487_948_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 478_390 nanoseconds.
		Weight::from_parts(487_724_104_u64, 0)
			// Standard Error: 26
			.saturating_add(Weight::from_parts(253_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Minimum execution time: 456_901 nanoseconds.
		Weight::from_parts(376_435_588_u64, 0)
			// Standard Error: 10_085
			.saturating_add(Weight::from_parts(6_469_072_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 477_530 nanoseconds.
		Weight::from_parts(487_422_367_u64, 0)
			// Standard Error: 30
			.saturating_add(Weight::from_parts(858_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Minimum execution time: 458_690 nanoseconds.
		Weight::from_parts(377_783_636_u64, 0)
			// Standard Error: 9_044
			.saturating_add(Weight::from_parts(6_222_186_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 476_290 nanoseconds.
		Weight::from_parts(486_716_892_u64, 0)
			// Standard Error: 38
			.saturating_add(Weight::from_parts(231_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Minimum execution time: 458_440 nanoseconds.
		Weight::from_parts(359_232_894_u64, 0)
			// Standard Error: 10_454
			.saturating_add(Weight::from_parts(7_719_867_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 480_270 nanoseconds.
		Weight::from_parts(489_916_576_u64, 0)
			// Standard Error: 32
			.saturating_add(Weight::from_parts(1_028_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: System Account (r:1602 w:1601)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Minimum execution time: 458_010 nanoseconds.
		Weight::from_parts(379_501_248_u64, 0)
			// Standard Error: 25_309
			.saturating_add(Weight::from_parts(66_347_858_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(6_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Minimum execution time: 458_020 nanoseconds.
		Weight::from_parts(463_220_000_u64, 0)
			// Standard Error: 96_390
			.saturating_add(Weight::from_parts(404_186_926_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:736 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:737 w:737)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Minimum execution time: 457_820 nanoseconds.
		Weight::from_parts(462_720_000_u64, 0)
			// Standard Error: 212_145
			.saturating_add(Weight::from_parts(398_874_315_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:3 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Minimum execution time: 765_830 nanoseconds.
		Weight::from_parts(711_104_666_u64, 0)
			// Standard Error: 587_480
			.saturating_add(Weight::from_parts(70_427_076_u64, 0).saturating_mul(t as u64))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(656_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1602 w:1602)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:801 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:800 w:800)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Minimum execution time: 1_078_351 nanoseconds.
		Weight::from_parts(1_086_690_000_u64, 0)
			// Standard Error: 266_579
			.saturating_add(Weight::from_parts(631_258_979_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((5_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 2_697_570 nanoseconds.
		Weight::from_parts(831_893_037_u64, 0)
			// Standard Error: 6_254_129
			.saturating_add(Weight::from_parts(117_714_130_u64, 0).saturating_mul(t as u64))
			// Standard Error: 9
			.saturating_add(Weight::from_parts(1_802_u64, 0).saturating_mul(i as u64))
			// Standard Error: 9
			.saturating_add(Weight::from_parts(1_881_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(12_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Minimum execution time: 450_840 nanoseconds.
		Weight::from_parts(463_791_633_u64, 0)
			// Standard Error: 679
			.saturating_add(Weight::from_parts(547_334_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 458_710 nanoseconds.
		Weight::from_parts(456_757_397_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(1_206_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Minimum execution time: 450_230 nanoseconds.
		Weight::from_parts(462_961_178_u64, 0)
			// Standard Error: 702
			.saturating_add(Weight::from_parts(920_422_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 454_290 nanoseconds.
		Weight::from_parts(459_677_496_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(3_250_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Minimum execution time: 454_230 nanoseconds.
		Weight::from_parts(464_195_911_u64, 0)
			// Standard Error: 486
			.saturating_add(Weight::from_parts(618_964_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 457_120 nanoseconds.
		Weight::from_parts(457_335_422_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(1_536_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Minimum execution time: 453_449 nanoseconds.
		Weight::from_parts(462_866_659_u64, 0)
			// Standard Error: 490
			.saturating_add(Weight::from_parts(613_504_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 454_870 nanoseconds.
		Weight::from_parts(453_969_888_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(1_555_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 529_380 nanoseconds.
		Weight::from_parts(540_717_225_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(6_257_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Minimum execution time: 460_970 nanoseconds.
		Weight::from_parts(487_586_797_u64, 0)
			// Standard Error: 10_263
			.saturating_add(Weight::from_parts(59_669_106_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Minimum execution time: 457_890 nanoseconds.
		Weight::from_parts(483_345_383_u64, 0)
			// Standard Error: 17_048
			.saturating_add(Weight::from_parts(43_145_562_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Minimum execution time: 455_830 nanoseconds.
		Weight::from_parts(482_701_089_u64, 0)
			// Standard Error: 22_643
			.saturating_add(Weight::from_parts(11_294_984_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1536 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1538 w:1538)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 460_040 nanoseconds.
		Weight::from_parts(463_400_000_u64, 0)
			// Standard Error: 39_834
			.saturating_add(Weight::from_parts(32_416_447_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 453_000 nanoseconds.
		Weight::from_parts(463_117_482_u64, 0)
			// Standard Error: 418
			.saturating_add(Weight::from_parts(182_705_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 455_640 nanoseconds.
		Weight::from_parts(488_199_281_u64, 0)
			// Standard Error: 842
			.saturating_add(Weight::from_parts(272_437_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Minimum execution time: 448_090 nanoseconds.
		Weight::from_parts(464_355_494_u64, 0)
			// Standard Error: 332
			.saturating_add(Weight::from_parts(159_693_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64const(r: u32, ) -> Weight {
		// Minimum execution time: 3_390 nanoseconds.
		Weight::from_parts(3_881_140_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(3_315_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64load(r: u32, ) -> Weight {
		// Minimum execution time: 3_750 nanoseconds.
		Weight::from_parts(4_332_179_u64, 0)
			// Standard Error: 12
			.saturating_add(Weight::from_parts(7_437_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64store(r: u32, ) -> Weight {
		// Minimum execution time: 3_750 nanoseconds.
		Weight::from_parts(4_376_055_u64, 0)
			// Standard Error: 44
			.saturating_add(Weight::from_parts(7_608_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_select(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(4_162_376_u64, 0)
			// Standard Error: 46
			.saturating_add(Weight::from_parts(10_017_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_if(r: u32, ) -> Weight {
		// Minimum execution time: 3_390 nanoseconds.
		Weight::from_parts(4_187_144_u64, 0)
			// Standard Error: 46
			.saturating_add(Weight::from_parts(14_582_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br(r: u32, ) -> Weight {
		// Minimum execution time: 3_460 nanoseconds.
		Weight::from_parts(3_983_461_u64, 0)
			// Standard Error: 36
			.saturating_add(Weight::from_parts(6_417_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_if(r: u32, ) -> Weight {
		// Minimum execution time: 3_450 nanoseconds.
		Weight::from_parts(3_777_504_u64, 0)
			// Standard Error: 57
			.saturating_add(Weight::from_parts(8_401_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_table(r: u32, ) -> Weight {
		// Minimum execution time: 3_500 nanoseconds.
		Weight::from_parts(4_154_352_u64, 0)
			// Standard Error: 24
			.saturating_add(Weight::from_parts(10_643_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `e` is `[1, 256]`.
	fn instr_br_table_per_entry(e: u32, ) -> Weight {
		// Minimum execution time: 3_429 nanoseconds.
		Weight::from_parts(3_776_018_u64, 0)
			// Standard Error: 42
			.saturating_add(Weight::from_parts(24_u64, 0).saturating_mul(e as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(1_332_947_u64, 0)
			// Standard Error: 645
			.saturating_add(Weight::from_parts(28_674_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call_indirect(r: u32, ) -> Weight {
		// Minimum execution time: 4_090 nanoseconds.
		Weight::from_parts(7_088_125_u64, 0)
			// Standard Error: 164
			.saturating_add(Weight::from_parts(27_795_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `l` is `[0, 1024]`.
	fn instr_call_per_local(l: u32, ) -> Weight {
		// Minimum execution time: 3_540 nanoseconds.
		Weight::from_parts(4_078_855_u64, 0)
			// Standard Error: 27
			.saturating_add(Weight::from_parts(2_693_u64, 0).saturating_mul(l as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_get(r: u32, ) -> Weight {
		// Minimum execution time: 6_320 nanoseconds.
		Weight::from_parts(6_672_751_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(11_497_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_set(r: u32, ) -> Weight {
		// Minimum execution time: 6_220 nanoseconds.
		Weight::from_parts(6_595_369_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(3_681_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_tee(r: u32, ) -> Weight {
		// Minimum execution time: 6_320 nanoseconds.
		Weight::from_parts(6_968_145_u64, 0)
			// Standard Error: 17
			.saturating_add(Weight::from_parts(5_580_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_get(r: u32, ) -> Weight {
		// Minimum execution time: 3_630 nanoseconds.
		Weight::from_parts(4_319_590_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(9_231_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_set(r: u32, ) -> Weight {
		// Minimum execution time: 3_760 nanoseconds.
		Weight::from_parts(4_218_983_u64, 0)
			// Standard Error: 15
			.saturating_add(Weight::from_parts(9_636_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_memory_current(r: u32, ) -> Weight {
		// Minimum execution time: 3_760 nanoseconds.
		Weight::from_parts(4_165_466_u64, 0)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(5_172_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 16]`.
	fn instr_memory_grow(r: u32, ) -> Weight {
		// Minimum execution time: 3_640 nanoseconds.
		Weight::from_parts(2_032_586_u64, 0)
			// Standard Error: 174_797
			.saturating_add(Weight::from_parts(20_852_863_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64clz(r: u32, ) -> Weight {
		// Minimum execution time: 3_420 nanoseconds.
		Weight::from_parts(3_878_503_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(5_602_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ctz(r: u32, ) -> Weight {
		// Minimum execution time: 3_500 nanoseconds.
		Weight::from_parts(3_913_673_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(5_610_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64popcnt(r: u32, ) -> Weight {
		// Minimum execution time: 3_300 nanoseconds.
		Weight::from_parts(3_927_835_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(5_597_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eqz(r: u32, ) -> Weight {
		// Minimum execution time: 3_420 nanoseconds.
		Weight::from_parts(3_893_035_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(5_592_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendsi32(r: u32, ) -> Weight {
		// Minimum execution time: 3_431 nanoseconds.
		Weight::from_parts(3_900_747_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(5_592_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendui32(r: u32, ) -> Weight {
		// Minimum execution time: 3_551 nanoseconds.
		Weight::from_parts(3_929_561_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(5_310_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i32wrapi64(r: u32, ) -> Weight {
		// Minimum execution time: 3_430 nanoseconds.
		Weight::from_parts(3_934_914_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(5_586_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eq(r: u32, ) -> Weight {
		// Minimum execution time: 3_430 nanoseconds.
		Weight::from_parts(3_946_033_u64, 0)
			// Standard Error: 33
			.saturating_add(Weight::from_parts(7_923_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ne(r: u32, ) -> Weight {
		// Minimum execution time: 3_420 nanoseconds.
		Weight::from_parts(3_999_972_u64, 0)
			// Standard Error: 38
			.saturating_add(Weight::from_parts(7_718_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64lts(r: u32, ) -> Weight {
		// Minimum execution time: 3_550 nanoseconds.
		Weight::from_parts(4_024_640_u64, 0)
			// Standard Error: 31
			.saturating_add(Weight::from_parts(7_655_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ltu(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(4_069_326_u64, 0)
			// Standard Error: 39
			.saturating_add(Weight::from_parts(7_719_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gts(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(3_802_484_u64, 0)
			// Standard Error: 40
			.saturating_add(Weight::from_parts(7_838_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gtu(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(3_998_846_u64, 0)
			// Standard Error: 37
			.saturating_add(Weight::from_parts(7_721_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64les(r: u32, ) -> Weight {
		// Minimum execution time: 3_470 nanoseconds.
		Weight::from_parts(3_948_860_u64, 0)
			// Standard Error: 47
			.saturating_add(Weight::from_parts(7_873_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64leu(r: u32, ) -> Weight {
		// Minimum execution time: 3_550 nanoseconds.
		Weight::from_parts(3_824_992_u64, 0)
			// Standard Error: 40
			.saturating_add(Weight::from_parts(7_804_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ges(r: u32, ) -> Weight {
		// Minimum execution time: 3_390 nanoseconds.
		Weight::from_parts(4_113_816_u64, 0)
			// Standard Error: 40
			.saturating_add(Weight::from_parts(7_716_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64geu(r: u32, ) -> Weight {
		// Minimum execution time: 3_531 nanoseconds.
		Weight::from_parts(4_008_583_u64, 0)
			// Standard Error: 44
			.saturating_add(Weight::from_parts(7_798_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64add(r: u32, ) -> Weight {
		// Minimum execution time: 3_490 nanoseconds.
		Weight::from_parts(3_954_930_u64, 0)
			// Standard Error: 44
			.saturating_add(Weight::from_parts(7_532_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64sub(r: u32, ) -> Weight {
		// Minimum execution time: 3_469 nanoseconds.
		Weight::from_parts(3_775_240_u64, 0)
			// Standard Error: 44
			.saturating_add(Weight::from_parts(7_600_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64mul(r: u32, ) -> Weight {
		// Minimum execution time: 3_500 nanoseconds.
		Weight::from_parts(4_078_517_u64, 0)
			// Standard Error: 30
			.saturating_add(Weight::from_parts(7_641_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divs(r: u32, ) -> Weight {
		// Minimum execution time: 3_430 nanoseconds.
		Weight::from_parts(4_029_381_u64, 0)
			// Standard Error: 36
			.saturating_add(Weight::from_parts(8_870_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divu(r: u32, ) -> Weight {
		// Minimum execution time: 3_360 nanoseconds.
		Weight::from_parts(4_300_054_u64, 0)
			// Standard Error: 37
			.saturating_add(Weight::from_parts(8_477_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rems(r: u32, ) -> Weight {
		// Minimum execution time: 3_510 nanoseconds.
		Weight::from_parts(4_075_906_u64, 0)
			// Standard Error: 36
			.saturating_add(Weight::from_parts(8_554_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64remu(r: u32, ) -> Weight {
		// Minimum execution time: 3_420 nanoseconds.
		Weight::from_parts(4_211_222_u64, 0)
			// Standard Error: 34
			.saturating_add(Weight::from_parts(8_217_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64and(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(4_229_893_u64, 0)
			// Standard Error: 36
			.saturating_add(Weight::from_parts(7_653_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64or(r: u32, ) -> Weight {
		// Minimum execution time: 3_460 nanoseconds.
		Weight::from_parts(4_164_435_u64, 0)
			// Standard Error: 39
			.saturating_add(Weight::from_parts(7_692_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64xor(r: u32, ) -> Weight {
		// Minimum execution time: 3_360 nanoseconds.
		Weight::from_parts(4_139_450_u64, 0)
			// Standard Error: 44
			.saturating_add(Weight::from_parts(7_498_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shl(r: u32, ) -> Weight {
		// Minimum execution time: 3_510 nanoseconds.
		Weight::from_parts(3_903_331_u64, 0)
			// Standard Error: 45
			.saturating_add(Weight::from_parts(7_866_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shrs(r: u32, ) -> Weight {
		// Minimum execution time: 3_400 nanoseconds.
		Weight::from_parts(4_101_061_u64, 0)
			// Standard Error: 42
			.saturating_add(Weight::from_parts(7_749_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shru(r: u32, ) -> Weight {
		// Minimum execution time: 3_490 nanoseconds.
		Weight::from_parts(3_934_804_u64, 0)
			// Standard Error: 43
			.saturating_add(Weight::from_parts(7_801_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotl(r: u32, ) -> Weight {
		// Minimum execution time: 3_490 nanoseconds.
		Weight::from_parts(4_077_927_u64, 0)
			// Standard Error: 32
			.saturating_add(Weight::from_parts(7_658_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotr(r: u32, ) -> Weight {
		// Minimum execution time: 3_460 nanoseconds.
		Weight::from_parts(3_754_872_u64, 0)
			// Standard Error: 47
			.saturating_add(Weight::from_parts(8_233_u64, 0).saturating_mul(r as u64))
	}
}
