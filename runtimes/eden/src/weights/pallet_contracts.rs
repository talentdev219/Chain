/*
 * This file is part of the Nodle Chain distributed at https://github.com/NodleCode/chain
 * Copyright (C) 2020-2022  Nodle International
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `chain-bench-2a6c49ba`, CPU: `AMD EPYC 7B13`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/nodle-parachain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --template=./.maintain/external_pallet_weights.hbs
// --output=runtimes/eden/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use core::marker::PhantomData;

/// Weight functions for `pallet_contracts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
	// Storage: Contracts DeletionQueueCounter (r:1 w:0)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	fn on_process_deletion_queue_batch() -> Weight {
		// Minimum execution time: 4_030 nanoseconds.
		Weight::from_parts(4_240_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Minimum execution time: 20_940 nanoseconds.
		Weight::from_parts(13_226_806_u64, 0)
			// Standard Error: 1_133
			.saturating_add(Weight::from_parts(1_190_372_u64, 0).saturating_mul(k as u64))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(k as u64)))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k as u64)))
	}
	// Storage: Contracts PristineCode (r:1 w:0)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn reinstrument(c: u32, ) -> Weight {
		// Minimum execution time: 49_291 nanoseconds.
		Weight::from_parts(51_176_239_u64, 0)
			// Standard Error: 165
			.saturating_add(Weight::from_parts(68_555_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Minimum execution time: 411_500 nanoseconds.
		Weight::from_parts(445_363_860_u64, 0)
			// Standard Error: 22
			.saturating_add(Weight::from_parts(43_610_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 4_571_090 nanoseconds.
		Weight::from_parts(677_993_998_u64, 0)
			// Standard Error: 151
			.saturating_add(Weight::from_parts(133_826_u64, 0).saturating_mul(c as u64))
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_932_u64, 0).saturating_mul(i as u64))
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_845_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 2_448_210 nanoseconds.
		Weight::from_parts(528_737_319_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_928_u64, 0).saturating_mul(i as u64))
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_827_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn call() -> Weight {
		// Minimum execution time: 327_310 nanoseconds.
		Weight::from_parts(334_620_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	/// The range of component `c` is `[0, 61717]`.
	fn upload_code(c: u32, ) -> Weight {
		// Minimum execution time: 395_720 nanoseconds.
		Weight::from_parts(405_198_727_u64, 0)
			// Standard Error: 67
			.saturating_add(Weight::from_parts(133_632_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1 w:1)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts CodeStorage (r:0 w:1)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Contracts PristineCode (r:0 w:1)
	// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Measured)
	fn remove_code() -> Weight {
		// Minimum execution time: 57_030 nanoseconds.
		Weight::from_parts(57_931_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:2 w:2)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	fn set_code() -> Weight {
		// Minimum execution time: 51_470 nanoseconds.
		Weight::from_parts(52_720_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Minimum execution time: 371_560 nanoseconds.
		Weight::from_parts(386_621_965_u64, 0)
			// Standard Error: 533
			.saturating_add(Weight::from_parts(566_098_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Minimum execution time: 371_820 nanoseconds.
		Weight::from_parts(188_260_251_u64, 0)
			// Standard Error: 6_776
			.saturating_add(Weight::from_parts(4_772_943_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1601 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 374_291 nanoseconds.
		Weight::from_parts(186_166_419_u64, 0)
			// Standard Error: 6_996
			.saturating_add(Weight::from_parts(6_214_095_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 376_540 nanoseconds.
		Weight::from_parts(386_298_818_u64, 0)
			// Standard Error: 520
			.saturating_add(Weight::from_parts(745_945_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Minimum execution time: 365_540 nanoseconds.
		Weight::from_parts(378_882_058_u64, 0)
			// Standard Error: 305
			.saturating_add(Weight::from_parts(183_571_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Minimum execution time: 368_760 nanoseconds.
		Weight::from_parts(384_049_072_u64, 0)
			// Standard Error: 489
			.saturating_add(Weight::from_parts(573_420_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Minimum execution time: 371_730 nanoseconds.
		Weight::from_parts(385_176_727_u64, 0)
			// Standard Error: 558
			.saturating_add(Weight::from_parts(985_007_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:2 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Minimum execution time: 371_940 nanoseconds.
		Weight::from_parts(392_740_707_u64, 0)
			// Standard Error: 845
			.saturating_add(Weight::from_parts(2_738_870_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Minimum execution time: 372_330 nanoseconds.
		Weight::from_parts(386_357_214_u64, 0)
			// Standard Error: 533
			.saturating_add(Weight::from_parts(564_286_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Minimum execution time: 376_520 nanoseconds.
		Weight::from_parts(386_201_777_u64, 0)
			// Standard Error: 428
			.saturating_add(Weight::from_parts(565_499_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Minimum execution time: 370_370 nanoseconds.
		Weight::from_parts(385_819_852_u64, 0)
			// Standard Error: 450
			.saturating_add(Weight::from_parts(553_793_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Minimum execution time: 372_540 nanoseconds.
		Weight::from_parts(385_265_939_u64, 0)
			// Standard Error: 474
			.saturating_add(Weight::from_parts(561_035_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
	// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Minimum execution time: 373_210 nanoseconds.
		Weight::from_parts(398_096_440_u64, 0)
			// Standard Error: 846
			.saturating_add(Weight::from_parts(2_077_133_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas(r: u32, ) -> Weight {
		// Minimum execution time: 282_350 nanoseconds.
		Weight::from_parts(294_525_456_u64, 0)
			// Standard Error: 322
			.saturating_add(Weight::from_parts(152_726_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Minimum execution time: 373_810 nanoseconds.
		Weight::from_parts(384_343_597_u64, 0)
			// Standard Error: 467
			.saturating_add(Weight::from_parts(410_604_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 374_310 nanoseconds.
		Weight::from_parts(384_179_830_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(584_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Minimum execution time: 361_830 nanoseconds.
		Weight::from_parts(372_958_755_u64, 0)
			// Standard Error: 458_318
			.saturating_add(Weight::from_parts(4_774_344_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 370_040 nanoseconds.
		Weight::from_parts(378_535_626_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(217_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueueCounter (r:1 w:1)
	// Proof: Contracts DeletionQueueCounter (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	// Storage: Contracts DeletionQueue (r:0 w:1)
	// Proof: Contracts DeletionQueue (max_values: None, max_size: Some(142), added: 2617, mode: Measured)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Minimum execution time: 368_649 nanoseconds.
		Weight::from_parts(378_831_855_u64, 0)
			// Standard Error: 460_552
			.saturating_add(Weight::from_parts(200_327_044_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((8_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Minimum execution time: 368_280 nanoseconds.
		Weight::from_parts(385_366_082_u64, 0)
			// Standard Error: 1_115
			.saturating_add(Weight::from_parts(3_243_231_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Minimum execution time: 363_880 nanoseconds.
		Weight::from_parts(384_338_686_u64, 0)
			// Standard Error: 3_112
			.saturating_add(Weight::from_parts(6_524_970_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:6 w:6)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Minimum execution time: 397_399 nanoseconds.
		Weight::from_parts(396_112_563_u64, 0)
			// Standard Error: 64_732
			.saturating_add(Weight::from_parts(3_711_249_u64, 0).saturating_mul(t as u64))
			// Standard Error: 18
			.saturating_add(Weight::from_parts(889_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Minimum execution time: 288_800 nanoseconds.
		Weight::from_parts(301_931_959_u64, 0)
			// Standard Error: 475
			.saturating_add(Weight::from_parts(271_305_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: MaxEncodedLen)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: MaxEncodedLen)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Minimum execution time: 502_230 nanoseconds.
		Weight::from_parts(513_753_340_u64, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(799_u64, 0).saturating_mul(i as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Minimum execution time: 375_660 nanoseconds.
		Weight::from_parts(280_976_750_u64, 0)
			// Standard Error: 10_048
			.saturating_add(Weight::from_parts(7_642_380_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Minimum execution time: 397_890 nanoseconds.
		Weight::from_parts(459_344_849_u64, 0)
			// Standard Error: 77
			.saturating_add(Weight::from_parts(789_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Minimum execution time: 394_840 nanoseconds.
		Weight::from_parts(406_773_202_u64, 0)
			// Standard Error: 26
			.saturating_add(Weight::from_parts(210_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Minimum execution time: 373_190 nanoseconds.
		Weight::from_parts(270_455_667_u64, 0)
			// Standard Error: 10_858
			.saturating_add(Weight::from_parts(7_477_636_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 394_931 nanoseconds.
		Weight::from_parts(405_341_001_u64, 0)
			// Standard Error: 30
			.saturating_add(Weight::from_parts(206_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Minimum execution time: 372_500 nanoseconds.
		Weight::from_parts(287_951_108_u64, 0)
			// Standard Error: 9_879
			.saturating_add(Weight::from_parts(6_472_339_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 394_331 nanoseconds.
		Weight::from_parts(404_613_644_u64, 0)
			// Standard Error: 32
			.saturating_add(Weight::from_parts(895_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Minimum execution time: 371_650 nanoseconds.
		Weight::from_parts(288_325_637_u64, 0)
			// Standard Error: 9_568
			.saturating_add(Weight::from_parts(6_211_071_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 390_160 nanoseconds.
		Weight::from_parts(401_269_326_u64, 0)
			// Standard Error: 25
			.saturating_add(Weight::from_parts(398_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Minimum execution time: 371_710 nanoseconds.
		Weight::from_parts(270_803_877_u64, 0)
			// Standard Error: 10_784
			.saturating_add(Weight::from_parts(7_711_804_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: Skipped Metadata (r:0 w:0)
	// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 395_500 nanoseconds.
		Weight::from_parts(407_903_516_u64, 0)
			// Standard Error: 32
			.saturating_add(Weight::from_parts(830_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	// Storage: System Account (r:1602 w:1601)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Minimum execution time: 372_740 nanoseconds.
		Weight::from_parts(253_987_620_u64, 0)
			// Standard Error: 15_263
			.saturating_add(Weight::from_parts(65_898_465_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(6_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Minimum execution time: 374_730 nanoseconds.
		Weight::from_parts(379_970_000_u64, 0)
			// Standard Error: 93_934
			.saturating_add(Weight::from_parts(329_615_606_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:736 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:737 w:737)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Minimum execution time: 376_990 nanoseconds.
		Weight::from_parts(383_120_000_u64, 0)
			// Standard Error: 120_648
			.saturating_add(Weight::from_parts(320_214_826_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:3 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Minimum execution time: 689_780 nanoseconds.
		Weight::from_parts(629_524_808_u64, 0)
			// Standard Error: 485_263
			.saturating_add(Weight::from_parts(68_458_700_u64, 0).saturating_mul(t as u64))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(580_u64, 0).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1602 w:1602)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:801 w:801)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:801 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:800 w:800)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:802 w:802)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Minimum execution time: 922_601 nanoseconds.
		Weight::from_parts(931_840_000_u64, 0)
			// Standard Error: 246_090
			.saturating_add(Weight::from_parts(556_769_723_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().reads((6_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(8_u64))
			.saturating_add(T::DbWeight::get().writes((5_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:4 w:4)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:2 w:2)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:2 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1 w:1)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System EventTopics (r:3 w:3)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Minimum execution time: 2_554_499 nanoseconds.
		Weight::from_parts(758_408_139_u64, 0)
			// Standard Error: 5_192_913
			.saturating_add(Weight::from_parts(109_892_135_u64, 0).saturating_mul(t as u64))
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_736_u64, 0).saturating_mul(i as u64))
			// Standard Error: 8
			.saturating_add(Weight::from_parts(1_803_u64, 0).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t as u64)))
			.saturating_add(T::DbWeight::get().writes(12_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Minimum execution time: 366_250 nanoseconds.
		Weight::from_parts(379_045_917_u64, 0)
			// Standard Error: 483
			.saturating_add(Weight::from_parts(555_800_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 374_200 nanoseconds.
		Weight::from_parts(373_839_572_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(1_133_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Minimum execution time: 366_110 nanoseconds.
		Weight::from_parts(380_453_810_u64, 0)
			// Standard Error: 480
			.saturating_add(Weight::from_parts(920_904_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 369_490 nanoseconds.
		Weight::from_parts(374_405_028_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(3_188_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Minimum execution time: 367_140 nanoseconds.
		Weight::from_parts(379_122_822_u64, 0)
			// Standard Error: 523
			.saturating_add(Weight::from_parts(616_752_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 373_131 nanoseconds.
		Weight::from_parts(375_161_073_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(1_461_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Minimum execution time: 367_480 nanoseconds.
		Weight::from_parts(380_120_608_u64, 0)
			// Standard Error: 442
			.saturating_add(Weight::from_parts(636_187_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 371_050 nanoseconds.
		Weight::from_parts(371_934_565_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(1_476_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Minimum execution time: 443_150 nanoseconds.
		Weight::from_parts(456_103_291_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(6_051_u64, 0).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Minimum execution time: 369_000 nanoseconds.
		Weight::from_parts(416_837_065_u64, 0)
			// Standard Error: 13_989
			.saturating_add(Weight::from_parts(59_437_946_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Minimum execution time: 373_980 nanoseconds.
		Weight::from_parts(393_380_984_u64, 0)
			// Standard Error: 12_067
			.saturating_add(Weight::from_parts(43_415_782_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Minimum execution time: 374_260 nanoseconds.
		Weight::from_parts(392_590_064_u64, 0)
			// Standard Error: 5_043
			.saturating_add(Weight::from_parts(11_218_539_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1536 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
	// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:1538 w:1538)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Minimum execution time: 371_430 nanoseconds.
		Weight::from_parts(378_380_000_u64, 0)
			// Standard Error: 39_109
			.saturating_add(Weight::from_parts(32_408_848_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r as u64)))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r as u64)))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 369_860 nanoseconds.
		Weight::from_parts(379_060_078_u64, 0)
			// Standard Error: 279
			.saturating_add(Weight::from_parts(182_728_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Minimum execution time: 372_410 nanoseconds.
		Weight::from_parts(406_827_095_u64, 0)
			// Standard Error: 690
			.saturating_add(Weight::from_parts(271_882_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: System Account (r:1 w:0)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: Measured)
	// Storage: Balances TotalIssuance (r:1 w:0)
	// Proof: Balances TotalIssuance (max_values: Some(1), max_size: Some(16), added: 511, mode: Measured)
	// Storage: Contracts ContractInfoOf (r:1 w:1)
	// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(290), added: 2765, mode: Measured)
	// Storage: Contracts CodeStorage (r:1 w:0)
	// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Measured)
	// Storage: Timestamp Now (r:1 w:0)
	// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System Number (r:1 w:0)
	// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: Contracts Nonce (r:1 w:1)
	// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Measured)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: Measured)
	// Storage: System EventCount (r:1 w:1)
	// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: Measured)
	// Storage: System Events (r:1 w:1)
	// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: System EventTopics (r:2 w:2)
	// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Measured)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Minimum execution time: 365_120 nanoseconds.
		Weight::from_parts(384_106_854_u64, 0)
			// Standard Error: 258
			.saturating_add(Weight::from_parts(159_064_u64, 0).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64const(r: u32, ) -> Weight {
		// Minimum execution time: 3_180 nanoseconds.
		Weight::from_parts(3_514_006_u64, 0)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(4_713_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64load(r: u32, ) -> Weight {
		// Minimum execution time: 3_460 nanoseconds.
		Weight::from_parts(4_110_796_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(7_635_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64store(r: u32, ) -> Weight {
		// Minimum execution time: 3_480 nanoseconds.
		Weight::from_parts(4_096_627_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(7_937_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_select(r: u32, ) -> Weight {
		// Minimum execution time: 3_180 nanoseconds.
		Weight::from_parts(3_726_442_u64, 0)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(10_744_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_if(r: u32, ) -> Weight {
		// Minimum execution time: 3_180 nanoseconds.
		Weight::from_parts(2_719_104_u64, 0)
			// Standard Error: 67
			.saturating_add(Weight::from_parts(16_223_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br(r: u32, ) -> Weight {
		// Minimum execution time: 3_220 nanoseconds.
		Weight::from_parts(3_813_823_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(6_199_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_if(r: u32, ) -> Weight {
		// Minimum execution time: 3_130 nanoseconds.
		Weight::from_parts(3_918_458_u64, 0)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(9_644_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_br_table(r: u32, ) -> Weight {
		// Minimum execution time: 3_200 nanoseconds.
		Weight::from_parts(3_916_320_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(10_814_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `e` is `[1, 256]`.
	fn instr_br_table_per_entry(e: u32, ) -> Weight {
		// Minimum execution time: 3_200 nanoseconds.
		Weight::from_parts(3_522_554_u64, 0)
			// Standard Error: 41
			.saturating_add(Weight::from_parts(139_u64, 0).saturating_mul(e as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call(r: u32, ) -> Weight {
		// Minimum execution time: 3_140 nanoseconds.
		Weight::from_parts(3_596_412_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(18_364_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_call_indirect(r: u32, ) -> Weight {
		// Minimum execution time: 3_820 nanoseconds.
		Weight::from_parts(6_115_499_u64, 0)
			// Standard Error: 27
			.saturating_add(Weight::from_parts(26_974_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `l` is `[0, 1024]`.
	fn instr_call_per_local(l: u32, ) -> Weight {
		// Minimum execution time: 3_200 nanoseconds.
		Weight::from_parts(3_791_512_u64, 0)
			// Standard Error: 25
			.saturating_add(Weight::from_parts(1_524_u64, 0).saturating_mul(l as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_get(r: u32, ) -> Weight {
		// Minimum execution time: 4_860 nanoseconds.
		Weight::from_parts(6_814_803_u64, 0)
			// Standard Error: 306
			.saturating_add(Weight::from_parts(18_111_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_set(r: u32, ) -> Weight {
		// Minimum execution time: 4_910 nanoseconds.
		Weight::from_parts(5_295_259_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(3_874_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_local_tee(r: u32, ) -> Weight {
		// Minimum execution time: 4_930 nanoseconds.
		Weight::from_parts(5_354_160_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(6_056_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_get(r: u32, ) -> Weight {
		// Minimum execution time: 3_520 nanoseconds.
		Weight::from_parts(4_146_314_u64, 0)
			// Standard Error: 4
			.saturating_add(Weight::from_parts(9_776_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_global_set(r: u32, ) -> Weight {
		// Minimum execution time: 3_520 nanoseconds.
		Weight::from_parts(4_160_597_u64, 0)
			// Standard Error: 12
			.saturating_add(Weight::from_parts(9_412_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_memory_current(r: u32, ) -> Weight {
		// Minimum execution time: 3_390 nanoseconds.
		Weight::from_parts(3_856_629_u64, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(6_638_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 16]`.
	fn instr_memory_grow(r: u32, ) -> Weight {
		// Minimum execution time: 3_360 nanoseconds.
		Weight::from_parts(1_711_461_u64, 0)
			// Standard Error: 174_877
			.saturating_add(Weight::from_parts(16_238_305_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64clz(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_602_552_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(6_158_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ctz(r: u32, ) -> Weight {
		// Minimum execution time: 3_090 nanoseconds.
		Weight::from_parts(3_563_178_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(6_183_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64popcnt(r: u32, ) -> Weight {
		// Minimum execution time: 3_250 nanoseconds.
		Weight::from_parts(3_639_813_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(5_876_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eqz(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_623_448_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(5_879_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendsi32(r: u32, ) -> Weight {
		// Minimum execution time: 3_260 nanoseconds.
		Weight::from_parts(3_583_550_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(5_861_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64extendui32(r: u32, ) -> Weight {
		// Minimum execution time: 3_220 nanoseconds.
		Weight::from_parts(3_697_325_u64, 0)
			// Standard Error: 7
			.saturating_add(Weight::from_parts(5_808_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i32wrapi64(r: u32, ) -> Weight {
		// Minimum execution time: 3_140 nanoseconds.
		Weight::from_parts(3_616_431_u64, 0)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(5_847_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64eq(r: u32, ) -> Weight {
		// Minimum execution time: 3_210 nanoseconds.
		Weight::from_parts(3_703_546_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(8_427_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ne(r: u32, ) -> Weight {
		// Minimum execution time: 3_200 nanoseconds.
		Weight::from_parts(3_607_717_u64, 0)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(8_775_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64lts(r: u32, ) -> Weight {
		// Minimum execution time: 3_240 nanoseconds.
		Weight::from_parts(3_757_682_u64, 0)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(8_457_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ltu(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_807_591_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(8_430_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gts(r: u32, ) -> Weight {
		// Minimum execution time: 3_130 nanoseconds.
		Weight::from_parts(3_666_363_u64, 0)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(8_441_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64gtu(r: u32, ) -> Weight {
		// Minimum execution time: 3_220 nanoseconds.
		Weight::from_parts(3_778_804_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(8_443_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64les(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_634_946_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(8_470_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64leu(r: u32, ) -> Weight {
		// Minimum execution time: 3_210 nanoseconds.
		Weight::from_parts(3_720_472_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(8_443_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64ges(r: u32, ) -> Weight {
		// Minimum execution time: 3_260 nanoseconds.
		Weight::from_parts(3_684_691_u64, 0)
			// Standard Error: 7
			.saturating_add(Weight::from_parts(8_440_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64geu(r: u32, ) -> Weight {
		// Minimum execution time: 3_229 nanoseconds.
		Weight::from_parts(3_838_125_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(8_403_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64add(r: u32, ) -> Weight {
		// Minimum execution time: 3_230 nanoseconds.
		Weight::from_parts(3_673_869_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(8_464_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64sub(r: u32, ) -> Weight {
		// Minimum execution time: 3_120 nanoseconds.
		Weight::from_parts(3_625_528_u64, 0)
			// Standard Error: 6
			.saturating_add(Weight::from_parts(8_750_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64mul(r: u32, ) -> Weight {
		// Minimum execution time: 3_171 nanoseconds.
		Weight::from_parts(3_759_935_u64, 0)
			// Standard Error: 9
			.saturating_add(Weight::from_parts(8_454_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divs(r: u32, ) -> Weight {
		// Minimum execution time: 3_130 nanoseconds.
		Weight::from_parts(3_577_789_u64, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(9_676_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64divu(r: u32, ) -> Weight {
		// Minimum execution time: 3_210 nanoseconds.
		Weight::from_parts(3_743_523_u64, 0)
			// Standard Error: 12
			.saturating_add(Weight::from_parts(9_348_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rems(r: u32, ) -> Weight {
		// Minimum execution time: 3_210 nanoseconds.
		Weight::from_parts(3_684_116_u64, 0)
			// Standard Error: 15
			.saturating_add(Weight::from_parts(9_393_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64remu(r: u32, ) -> Weight {
		// Minimum execution time: 3_160 nanoseconds.
		Weight::from_parts(3_558_907_u64, 0)
			// Standard Error: 23
			.saturating_add(Weight::from_parts(9_427_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64and(r: u32, ) -> Weight {
		// Minimum execution time: 3_120 nanoseconds.
		Weight::from_parts(3_714_002_u64, 0)
			// Standard Error: 12
			.saturating_add(Weight::from_parts(8_161_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64or(r: u32, ) -> Weight {
		// Minimum execution time: 3_240 nanoseconds.
		Weight::from_parts(3_687_561_u64, 0)
			// Standard Error: 14
			.saturating_add(Weight::from_parts(8_479_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64xor(r: u32, ) -> Weight {
		// Minimum execution time: 3_200 nanoseconds.
		Weight::from_parts(3_685_542_u64, 0)
			// Standard Error: 13
			.saturating_add(Weight::from_parts(8_460_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shl(r: u32, ) -> Weight {
		// Minimum execution time: 3_230 nanoseconds.
		Weight::from_parts(3_732_592_u64, 0)
			// Standard Error: 15
			.saturating_add(Weight::from_parts(8_511_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shrs(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_807_430_u64, 0)
			// Standard Error: 13
			.saturating_add(Weight::from_parts(8_312_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64shru(r: u32, ) -> Weight {
		// Minimum execution time: 3_170 nanoseconds.
		Weight::from_parts(3_688_491_u64, 0)
			// Standard Error: 7
			.saturating_add(Weight::from_parts(8_458_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotl(r: u32, ) -> Weight {
		// Minimum execution time: 3_240 nanoseconds.
		Weight::from_parts(3_743_457_u64, 0)
			// Standard Error: 10
			.saturating_add(Weight::from_parts(8_491_u64, 0).saturating_mul(r as u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64rotr(r: u32, ) -> Weight {
		// Minimum execution time: 3_190 nanoseconds.
		Weight::from_parts(3_780_045_u64, 0)
			// Standard Error: 12
			.saturating_add(Weight::from_parts(8_468_u64, 0).saturating_mul(r as u64))
	}
}
