name: Test rust code

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

env:
  nightly: nightly-2021-11-01
  target: wasm32-unknown-unknown
  tarpaulin-vers: '0.18.4'
  try-runtime-chain: dev
  try-runtime-uri: wss://main3.nodleprotocol.io:443

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ env.nightly }}
        override: true
        target: ${{ env.target }}

    - name: Cache cargo registry
      uses: actions/cache@v2.1.7
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v2.1.7
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache cargo build
      uses: actions/cache@v2.1.7
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-

    - name: Run cargo-tarpaulin
      uses: actions-rs/tarpaulin@v0.1
      with:
        version: ${{ env.tarpaulin-vers }}
        args: '--avoid-cfg-tarpaulin --verbose --all-features --bin nodle-main --timeout 120'

    - name: Upload to Codecov
      uses: codecov/codecov-action@v2.0.3
      with:
        fail_ci_if_error: true

  try-runtime:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.nightly }}
          target: ${{ env.target }}

      - name: Cargo build --features=try-runtime
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features=try-runtime

      - name: Try Runtime
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --bin nodle-main --features=try-runtime try-runtime --execution native --chain ${{ env.try-runtime-chain }} on-runtime-upgrade live -u ${{ env.try-runtime-uri }}

  fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup toolchain
      run: ./scripts/init.sh

    - name: Install rustfmt
      run: rustup component add rustfmt

    - name: Run cargo fmt
      run: cargo fmt --all -- --check